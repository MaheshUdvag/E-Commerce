{"version":3,"sources":["hooks/useActiveOrder.ts","hooks/useUserProfile.ts","components/PayPal.tsx","components/Payment.tsx","screens/Checkout/CheckoutConstants.ts","screens/Checkout/CheckoutPage.tsx"],"names":["useActiveOrder","activeOrder","useSelector","state","order","error","useUserProfile","userProfile","user","PayPal","token","shippingAddress","useState","buttonRendered","setButtonRendered","history","useHistory","useEffect","paypal","Buttons","createOrder","a","createPayPayOrder","_id","data","id","onApprove","actions","payPalOrderId","orderID","approvePayPalOrder","response","status","console","log","reject","push","pathname","orderId","onShippingChange","address","shipping_address","updateOrderShippingAddress","addressUpdate","onError","err","render","useStyles","makeStyles","theme","createStyles","button","marginTop","spacing","marginRight","Payment","paymentType","setPaymentType","classes","placeOrder","approveOrder","Grid","container","style","item","lg","md","sm","xs","InputLabel","Select","native","labelId","value","onChange","event","name","target","padding","inputProps","Button","variant","color","className","onClick","CHECKOUT_CONSTANTS","root","width","actionsContainer","marginBottom","resetContainer","getStepContent","step","selectedAddress","filter","addr","length","AddressBook","page","AddressCard","CartItems","CheckoutPage","activeStep","setActiveStep","checkoutAddress","dispatch","useDispatch","steps","CHECKOUT","BACK","NEXT","useUserLogin","t","useTranslation","handleNext","prevActiveStep","document","getElementById","scrollTo","handleBack","isPrimary","checkoutAddressAction","Container","Typography","borderBottom","Stepper","orientation","map","label","index","Step","StepLabel","StepContent","disabled","OrderSummary","showCheckout"],"mappings":"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","file":"static/js/16.aa4689b4.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\n\nconst useActiveOrder = () => {\n  const activeOrder = useSelector((state: any) => {\n    return state.activeOrder;\n  });\n  const { order, error } = activeOrder;\n\n  return { order, error };\n};\n\nexport default useActiveOrder;\n","import { useSelector } from \"react-redux\";\n\nconst useUserProfile = () => {\n  const { user, error } = useSelector((state: any) => state.userProfile);\n  return { user, error };\n};\n\nexport default useUserProfile;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  approvePayPalOrder,\n  createPayPayOrder,\n  updateOrderShippingAddress,\n} from \"../apis/orderApis\";\nimport { IOrder } from \"./Interface/IOrder\";\nimport { IAddress } from \"./Interface/IUser\";\n\ninterface IPayPal {\n  order: IOrder;\n  token: string;\n  shippingAddress: IAddress;\n}\n\nconst PayPal: React.FC<IPayPal> = ({ order, token, shippingAddress }) => {\n  const [buttonRendered, setButtonRendered] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!buttonRendered) {\n      // @ts-ignore\n      paypal\n        .Buttons({\n          createOrder: async () => {\n            const { data } = await createPayPayOrder(\n              order._id,\n              token,\n              shippingAddress._id\n            );\n            const id = data.id;\n\n            return id;\n          },\n          onApprove: async (data: any, actions: any) => {\n            const { orderID: payPalOrderId } = data;\n            const response = await approvePayPalOrder(\n              payPalOrderId,\n              order._id,\n              token\n            );\n            if (response.data.status !== 201) {\n              console.log(\"reject \" + response.data.status);\n\n              actions.reject();\n            }\n            history.push({\n              pathname: \"/orderSummary\",\n              state: { orderId: order._id, token },\n            });\n            console.log(\"success \" + response.data.status);\n          },\n          onShippingChange: async (data: any, actions: any) => {\n            const { orderID: payPalOrderId, shipping_address: address } = data;\n            const {\n              data: { addressUpdate },\n            } = await updateOrderShippingAddress(\n              payPalOrderId,\n              order._id,\n              token,\n              address\n            );\n            if (!addressUpdate) {\n              actions.reject();\n            }\n          },\n          onError: (err: any) => {\n            console.error(err);\n          },\n        })\n        .render(\"#paypal\");\n\n      setButtonRendered(true);\n    }\n  }, [buttonRendered, history, order._id, shippingAddress._id, token]);\n\n  return <div id=\"paypal\"></div>;\n};\n\nexport default PayPal;\n","import {\n  Button,\n  createStyles,\n  Grid,\n  InputLabel,\n  makeStyles,\n  Select,\n  Theme,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { approveOrder } from \"../apis/orderApis\";\nimport PayPal from \"./PayPal\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nconst Payment: React.FC<any> = ({ order, token, shippingAddress }) => {\n  const [paymentType, setPaymentType] = useState<string>(\"Cash On Delivery\");\n  const classes = useStyles();\n  const history = useHistory();\n  const handleChange = (event: any) => {\n    const name = event.target.value;\n    setPaymentType(name);\n  };\n\n  const placeOrder = async () => {\n    if (paymentType !== \"\") {\n      const {\n        data: { status },\n      } = await approveOrder(order._id, paymentType, shippingAddress, token);\n      if (status === \"COMPLETED\")\n        history.push({\n          pathname: \"/orderSummary\",\n          state: { orderId: order._id, token },\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={5} style={{ marginTop: 10 }}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <InputLabel id=\"demo-simple-select-helper-label\">\n            Choose Payment\n          </InputLabel>\n          <Select\n            native\n            labelId=\"demo-simple-select-helper-label\"\n            value={paymentType}\n            onChange={handleChange}\n            style={{ padding: 15 }}\n            inputProps={{\n              name: paymentType,\n            }}\n          >\n            <option style={{ padding: 15 }} value=\"Cash On Delivery\">\n              Cash On Delivery\n            </option>\n            <option style={{ padding: 15 }} value=\"PayPal\">\n              PayPal\n            </option>\n          </Select>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          {paymentType === \"PayPal\" ? (\n            <PayPal\n              order={order}\n              token={token}\n              shippingAddress={shippingAddress}\n            />\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={placeOrder}\n            >\n              Place Order\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Payment;\n","export const CHECKOUT_CONSTANTS = {\n  STEPS: [\"Select Address\", \"Summary\", \"Payment\"],\n  CHECKOUT: \"CHECKOUT_PAGE.CHECKOUT\",\n  BACK: \"CHECKOUT_PAGE.BACK\",\n  NEXT: \"CHECKOUT_PAGE.NEXT\",\n};\n","import {\n  Button,\n  Container,\n  createStyles,\n  Grid,\n  makeStyles,\n  Step,\n  StepContent,\n  StepLabel,\n  Stepper,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch, useHistory } from \"react-router\";\nimport { checkoutAddressAction } from \"../../actions/checkoutActions\";\nimport AddressBook from \"../../components/AddressBook\";\nimport AddressCard from \"../../components/AddressCard\";\nimport CartItems from \"../../components/CartItems\";\nimport { IAddress } from \"../../components/Interface/IUser\";\nimport OrderSummary from \"../../components/OrderSummary\";\nimport Payment from \"../../components/Payment\";\nimport useActiveOrder from \"../../hooks/useActiveOrder\";\nimport useUserLogin from \"../../hooks/useUserLogin\";\nimport useUserProfile from \"../../hooks/useUserProfile\";\nimport { CHECKOUT_CONSTANTS } from \"./CheckoutConstants\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nfunction getSteps() {\n  return CHECKOUT_CONSTANTS.STEPS;\n}\n\nfunction getStepContent(\n  step: number,\n  user: any,\n  selectedAddress: any,\n  order: any,\n  token: any\n) {\n  const shippingAddress = user?.address.filter(\n    (addr: IAddress) => addr._id === selectedAddress\n  )[0];\n\n  switch (step) {\n    case 0:\n      return user?.address.length > 0 ? (\n        <AddressBook\n          address={user?.address}\n          page=\"checkout\"\n          selectedAddress={selectedAddress ? selectedAddress : \"\"}\n        />\n      ) : (\n        <AddressCard />\n      );\n    case 1:\n      return order ? <CartItems order={order} page=\"summary\" /> : <></>;\n    case 2:\n      return (\n        <Payment\n          order={order}\n          token={token}\n          shippingAddress={shippingAddress}\n        />\n      );\n    default:\n      return \"Unknown step\";\n  }\n}\n\nconst CheckoutPage: React.FC = () => {\n  const { user } = useUserProfile();\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const { _id: selectedAddress } = useSelector(\n    (state: any) => state.checkoutAddress\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { order } = useActiveOrder();\n  const steps = getSteps();\n  const { CHECKOUT, BACK, NEXT } = CHECKOUT_CONSTANTS;\n  const {\n    user: { token },\n  } = useUserLogin();\n  const { t } = useTranslation();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    document.getElementById(\"root\")?.scrollTo(0, 0);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    document.getElementById(\"root\")?.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    if (!order) {\n      history.push(\"/cart\");\n    }\n\n    if (!selectedAddress && user?.address.length > 0) {\n      const address = user?.address.filter(\n        (addr: any) => addr.isPrimary === \"1\"\n      )[0];\n      if (address) {\n        dispatch(checkoutAddressAction(address._id));\n      }\n    }\n  }, [user, dispatch, selectedAddress, history, order]);\n\n  return (\n    <Container>\n      <Grid container spacing={4}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Typography\n            variant=\"h4\"\n            style={{ borderBottom: \"2px solid #f0f0f0\" }}\n          >\n            {t(CHECKOUT)}\n          </Typography>\n        </Grid>\n        <Grid item lg={9} md={9} sm={12} xs={12}>\n          <Switch>\n            <>\n              <Stepper activeStep={activeStep} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                  <Step key={label}>\n                    <StepLabel>\n                      <Typography variant=\"h6\">{label}</Typography>\n                    </StepLabel>\n                    <StepContent className={classes.actionsContainer}>\n                      {getStepContent(\n                        index,\n                        user,\n                        selectedAddress,\n                        order,\n                        token\n                      )}\n                      <Button\n                        disabled={activeStep === 0}\n                        onClick={handleBack}\n                        className={classes.button}\n                      >\n                        {t(BACK)}\n                      </Button>\n                      {activeStep < steps.length - 1 && selectedAddress && (\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={handleNext}\n                          className={classes.button}\n                        >\n                          {t(NEXT)}\n                        </Button>\n                      )}\n                    </StepContent>\n                  </Step>\n                ))}\n              </Stepper>\n            </>\n          </Switch>\n        </Grid>\n        {order && (\n          <Grid item lg={3} md={3} sm={12} xs={12}>\n            <OrderSummary order={order} showCheckout={false} />\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CheckoutPage;\n"],"sourceRoot":""}