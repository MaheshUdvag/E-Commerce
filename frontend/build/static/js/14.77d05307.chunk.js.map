{"version":3,"sources":["hooks/useActiveOrder.ts","apis/productApis.ts","actions/productActions.ts","components/Error.tsx","components/ProductButton.tsx","components/ProductDetail.tsx","components/ProductImage.tsx","screens/PDP/ProductDetailPage.tsx"],"names":["useActiveOrder","activeOrder","useSelector","state","order","error","getProductsByCategory","path","count","sortBy","axios","method","url","params","storeName","headers","getProductDetail","listProducts","dispatch","a","productCount","isMobile","type","PRODUCT_LIST_REQUEST","data","PRODUCT_LIST_SUCCESS","payload","products","PRODUCT_LIST_FAIL","response","listProductsByCategory","PRODUCT_LIST_BY_CATEGORY_REQUEST","PRODUCT_LIST_BY_CATEGORY_SUCCESS","category","PRODUCT_LIST_BY_CATEGORY_FAIL","getProductDetailsByPath","PRODUCT_DETAIL_BY_PATH_REQUEST","loading","PRODUCT_DETAIL_BY_PATH_SUCCESS","product","PRODUCT_DETAIL_BY_PATH_FAIL","useStyles","makeStyles","theme","padding","Error","classes","container","spacing","alignItems","justifyContent","className","item","xs","alt","src","component","variant","button","width","margin","quantity","display","ProductButton","useDispatch","useState","orderItem","setOrderItem","user","useUserLogin","inCart","setInCart","open","setOpen","message","setMessage","severity","setSeverity","handleClose","event","reason","showMessage","addToCart","Object","keys","length","updateQuantity","_id","token","guestUser","createOrderAction","emptyCart","addUpdateItem","removeItem","status","ACTIVE_ORDER_SUCCESS","removeFromCart","useEffect","itemExists","orderItems","filter","Grid","lg","md","sm","Button","color","onClick","Typography","startIcon","Snackbar","autoHideDuration","onClose","Alert","price","fontWeight","fontSize","marginLeft","reviews","listPrice","contentBody","content","marginTop","title","borderBottom","rating","zIndex","ProductDetail","props","description","useMediaQuery","name","Rating","size","defaultValue","precision","readOnly","offerPrice","toFixed","attributes","map","attribute","value","longDescription","image","maxHeight","ProductImage","ReactImageMagnify","smallImage","isFluidWidth","largeImage","height","enlargedImageContainerDimensions","imageClassName","ProductDetailPage","match","history","useHistory","productDetailByPathReducer","desc","language","languageId","fullImage","window","scrollTo","Container","style","paddingBottom","position","top","goBack"],"mappings":"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","file":"static/js/14.77d05307.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\n\nconst useActiveOrder = () => {\n  const activeOrder = useSelector((state: any) => {\n    return state.activeOrder;\n  });\n  const { order, error } = activeOrder;\n\n  return { order, error };\n};\n\nexport default useActiveOrder;\n","import axios from \"axios\";\n\nexport const getProducts = (count: number) => {\n  return axios({\n    method: \"GET\",\n    url: \"/api/products\",\n    params: {\n      count,\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n\nexport const getProductsByCategory = (\n  path: string,\n  count: number,\n  sortBy: number\n) => {\n  return axios({\n    method: \"GET\",\n    url: \"/api/products/byCategory\",\n    params: {\n      path,\n      count,\n      sortBy,\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n\nexport const getProductDetail = (path: string) => {\n  return axios({\n    method: \"GET\",\n    url: `/api/products//detail/${path}`,\n    params: {\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n","import {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_BY_CATEGORY_SUCCESS,\n  PRODUCT_LIST_BY_CATEGORY_FAIL,\n  PRODUCT_DETAIL_BY_PATH_FAIL,\n  PRODUCT_DETAIL_BY_PATH_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_BY_CATEGORY_REQUEST,\n  PRODUCT_DETAIL_BY_PATH_REQUEST,\n} from \"../ActionTypes/product\";\nimport {\n  getProductDetail,\n  getProducts,\n  getProductsByCategory,\n} from \"../apis/productApis\";\nimport { isMobile } from \"react-device-detect\";\n\nexport const listProducts = () => async (dispatch: any) => {\n  try {\n    let productCount = 4;\n    if (isMobile) {\n      productCount = 2;\n    }\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await getProducts(productCount);\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data.products });\n  } catch (err: any) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: err.response });\n  }\n};\n\nexport const listProductsByCategory =\n  (path: string, count: number, sortBy: number) => async (dispatch: any) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_BY_CATEGORY_REQUEST });\n      const { data } = await getProductsByCategory(path, count, sortBy);\n      dispatch({\n        type: PRODUCT_LIST_BY_CATEGORY_SUCCESS,\n        payload: data.category,\n      });\n    } catch (err: any) {\n      dispatch({ type: PRODUCT_LIST_BY_CATEGORY_FAIL, payload: err.response });\n    }\n  };\n\nexport const getProductDetailsByPath =\n  (path: string) => async (dispatch: any) => {\n    try {\n      dispatch({\n        type: PRODUCT_DETAIL_BY_PATH_REQUEST,\n        payload: { loading: true },\n      });\n      const { data } = await getProductDetail(path);\n      dispatch({\n        type: PRODUCT_DETAIL_BY_PATH_SUCCESS,\n        payload: data.product,\n      });\n    } catch (err: any) {\n      dispatch({ type: PRODUCT_DETAIL_BY_PATH_FAIL, payload: err.response });\n    }\n  };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    padding: 30,\n  },\n}));\n\nconst Error = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={0}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      className={classes.error}\n    >\n      <Grid item xs={3}>\n        <img\n          alt=\"no resutls\"\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSfgrUiFnZKbTkCdl6z_uHD6PAQqkKsb_A7iA&usqp=CAU\"\n        />\n        <Typography component=\"h3\" variant=\"h3\">\n          Aaaah! Something went wrong\n        </Typography>\n        <Typography component=\"p\" variant=\"subtitle2\">\n          Brace yourself. we'll get this fixed as soon as possible. Sorry for\n          inconvenience. As an interim fix try refreshing, if the issue is still\n          persistent. Reach support - support@mcommerce.com\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Snackbar, Typography } from \"@material-ui/core\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { createOrderAction } from \"../actions/orderActions\";\nimport { IProduct } from \"./Interface/IProduct\";\nimport { IOrderItems } from \"./Interface/IOrder\";\nimport useActiveOrder from \"../hooks/useActiveOrder\";\nimport { guestUser } from \"../actions/userActions\";\nimport useUserLogin from \"../hooks/useUserLogin\";\nimport { Alert, Color } from \"@material-ui/lab\";\nimport { ACTIVE_ORDER_SUCCESS } from \"../ActionTypes/order\";\nimport { addUpdateItem, removeItem } from \"../apis/orderApis\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    margin: 2,\n  },\n  quantity: {\n    justifyContent: \"center\",\n    display: \"flex\",\n  },\n}));\n\nconst ProductButton = ({ product }: { product: IProduct }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [orderItem, setOrderItem] = useState<IOrderItems | null>();\n  const { order, error } = useActiveOrder();\n  const { user } = useUserLogin();\n  const [inCart, setInCart] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [severity, setSeverity] = useState<Color | undefined>(\"success\");\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const showMessage = (message: any, type?: any) => {\n    if (error) {\n      setMessage(error);\n    } else {\n      setMessage(message);\n    }\n    setSeverity(type || \"success\");\n    setOpen(true);\n  };\n\n  const addToCart = async () => {\n    if (order && Object.keys(order).length > 0) {\n      let quantity = 1;\n      if (orderItem) {\n        quantity += orderItem.quantity;\n      }\n      updateQuantity(order._id, product._id, quantity, user.token);\n    } else {\n      if (!user) {\n        await dispatch(guestUser());\n      }\n      await dispatch(createOrderAction(product._id, 1));\n    }\n  };\n\n  const updateQuantity = async (\n    order: any,\n    product: any,\n    quantity: any,\n    token: any\n  ) => {\n    let response;\n    let emptyCart = false;\n    if (quantity) {\n      response = await addUpdateItem(order, product, quantity, token);\n    } else {\n      emptyCart = true;\n      response = await removeItem(order, product, token);\n    }\n\n    if (response.status === 200 || response.status === 201) {\n      showMessage(\"Updated cart successfully\", \"success\");\n      if (emptyCart) {\n        dispatch({ type: ACTIVE_ORDER_SUCCESS, payload: {} });\n      } else {\n        dispatch({ type: ACTIVE_ORDER_SUCCESS, payload: response.data });\n      }\n    } else {\n      showMessage(\"Error occured while updating cart\", \"error\");\n    }\n  };\n\n  const removeFromCart = async () => {\n    if (orderItem) {\n      let quantity = orderItem.quantity;\n      quantity -= 1;\n      if (quantity <= 0) {\n        updateQuantity(order._id, product._id, 0, user.token);\n      } else {\n        updateQuantity(order._id, product._id, quantity, user.token);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (order && Object.keys(order).length > 0) {\n      const itemExists = order.orderItems.filter(\n        (item: IOrderItems) => item.product._id === product._id\n      );\n      if (itemExists.length > 0) {\n        setOrderItem(itemExists[0]);\n        setInCart(true);\n      }\n    } else {\n      setOrderItem(null);\n      setInCart(false);\n    }\n  }, [order, product._id]);\n\n  return (\n    <div>\n      {inCart ? (\n        <Grid container>\n          <Grid item lg={4} md={4} sm={4} xs={4}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={removeFromCart}\n            >\n              -\n            </Button>\n          </Grid>\n          <Grid item lg={4} md={4} sm={4} xs={4}>\n            <Typography className={classes.quantity}>\n              {orderItem?.quantity}\n            </Typography>\n          </Grid>\n          <Grid item lg={4} md={4} sm={4} xs={4}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={addToCart}\n            >\n              +\n            </Button>\n          </Grid>\n        </Grid>\n      ) : (\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          className={classes.button}\n          startIcon={<CartIcon />}\n          onClick={addToCart}\n        >\n          Add to Cart\n        </Button>\n      )}\n\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        className={classes.button}\n        startIcon={<BookmarkIcon />}\n      >\n        Save to wish list\n      </Button>\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default ProductButton;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProductButton from \"./ProductButton\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { IAttributes } from \"./Interface/IProduct\";\n\nconst useStyles = makeStyles((theme) => ({\n  price: {\n    fontWeight: \"bold\",\n    fontSize: \"x-large\",\n    marginLeft: 2,\n  },\n  reviews: {\n    fontSize: \"small\",\n  },\n  listPrice: {\n    fontSize: \"small\",\n    marginLeft: 5,\n  },\n  contentBody: {\n    padding: 5,\n  },\n  content: {\n    padding: 5,\n    marginTop: 10,\n  },\n  title: {\n    borderBottom: \"2px solid #f0f0f0\",\n    padding: 5,\n  },\n  rating: {\n    zIndex: -1,\n  },\n}));\n\nconst ProductDetail = (props: any) => {\n  const classes = useStyles();\n  const product = props.product;\n  const description = props.description;\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  return (\n    <>\n      <Typography variant=\"h5\">{product.name}</Typography>\n      <div>\n        <Typography variant=\"subtitle2\" className={classes.reviews}>\n          10000 Reviews | 200 comments\n        </Typography>\n        <Rating\n          size=\"small\"\n          name=\"read-only\"\n          defaultValue={3.5}\n          precision={0.5}\n          className={classes.rating}\n          readOnly\n        />\n\n        <Typography variant=\"body2\">\n          Price:{\" \"}\n          <span className={classes.price}>\n            ${product.price.offerPrice.toFixed(2)}\n          </span>\n          <del className={classes.listPrice}>\n            ${product.price.listPrice.toFixed(2)}\n          </del>\n        </Typography>\n      </div>\n\n      {isMobile && <ProductButton product={product} />}\n\n      {product.attributes.length > 0 ? (\n        <div className={classes.content}>\n          <Typography variant=\"h6\" className={classes.title}>\n            Specifications\n          </Typography>\n\n          {product.attributes.map((attribute: IAttributes) => (\n            <Grid\n              key={attribute._id}\n              container\n              spacing={3}\n              className={classes.contentBody}\n            >\n              <Grid item lg={3} md={4} sm={6} xs={6}>\n                <Typography\n                  className={classes.contentBody}\n                  variant=\"subtitle2\"\n                  component=\"p\"\n                >\n                  {attribute.name}\n                </Typography>\n              </Grid>\n              <Grid item lg={3} md={4} sm={6} xs={6}>\n                <Typography variant=\"subtitle2\" component=\"p\">\n                  {attribute.value}\n                </Typography>\n              </Grid>\n            </Grid>\n          ))}\n        </div>\n      ) : null}\n\n      <div className={classes.content}>\n        <Typography variant=\"h6\" className={classes.title}>\n          Description\n        </Typography>\n        <Typography variant=\"body2\" className={classes.contentBody}>\n          {description.longDescription}\n        </Typography>\n      </div>\n    </>\n  );\n};\n\nexport default ProductDetail;\n","import { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactImageMagnify from \"react-image-magnify\";\n\ninterface IProductImage {\n  image: string;\n  alt: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    maxHeight: 500,\n  },\n}));\n\nconst ProductImage: React.FC<IProductImage> = ({ image, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <ReactImageMagnify\n      {...{\n        smallImage: {\n          alt,\n          isFluidWidth: true,\n          src: image,\n        },\n        largeImage: {\n          src: image,\n          width: 1200,\n          height: 1800,\n        },\n        enlargedImageContainerDimensions: {\n          width: \"60%\",\n          height: \"100%\",\n        },\n        imageClassName: classes.image,\n      }}\n    />\n  );\n};\n\nexport default ProductImage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Container, Grid, useMediaQuery } from \"@material-ui/core\";\nimport ProductDetail from \"../../components/ProductDetail\";\nimport ProductImage from \"../../components/ProductImage\";\nimport { getProductDetailsByPath } from \"../../actions/productActions\";\nimport Error from \"../../components/Error\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  IProduct,\n  IProductDescription,\n} from \"../../components/Interface/IProduct\";\nimport ProductButton from \"../../components/ProductButton\";\n\nconst ProductDetailPage = (props: any) => {\n  const path = props.match.params.name;\n  const history = useHistory();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  const dispatch = useDispatch();\n  const getProductDetail = useSelector((state: any) => {\n    return state.productDetailByPathReducer;\n  });\n  const { product, loading }: { product: IProduct; loading: boolean } =\n    getProductDetail;\n\n  const description: IProductDescription | null =\n    product && Object.keys(product).length !== 0\n      ? product.description.filter((desc) => desc.language.languageId === -1)[0]\n      : null;\n\n  const image: string = description?.fullImage ? description.fullImage : \"\";\n  const alt: string = product?.name ? product.name : \"\";\n\n  useEffect(() => {\n    dispatch(getProductDetailsByPath(path));\n    window.scrollTo(0, 0);\n  }, [path, dispatch]);\n\n  return (\n    <>\n      {product && Object.keys(product).length > 0 && !loading ? (\n        <Container style={{ paddingBottom: 30 }}>\n          <Grid container spacing={4}>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <div style={{ position: \"sticky\", top: 120 }}>\n                <Button onClick={() => history.goBack()}>Go Back</Button>\n                <ProductImage image={image} alt={alt} />\n                {!isMobile && <ProductButton product={product} />}\n              </div>\n            </Grid>\n            <Grid item lg={8} md={6} sm={12} xs={12}>\n              <ProductDetail product={product} description={description} />\n            </Grid>\n          </Grid>\n        </Container>\n      ) : !loading ? (\n        <Error />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ProductDetailPage;\n"],"sourceRoot":""}