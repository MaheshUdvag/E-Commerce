{"version":3,"sources":["../node_modules/@material-ui/icons/ArrowForward.js","components/PaymentInfo.tsx","components/OrderInfo.tsx","components/Skeletons/OrderConfirmationSkeleton.tsx","screens/OrderSuccess/OrderSuccessPage.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","title","paddingBottom","PaymentInfo","payment","classes","Grid","container","spacing","item","lg","md","sm","xs","Typography","variant","className","paymentType","paymentId","status","Alert","severity","grid","marginTop","separator","borderTop","OrderInfo","order","address","lastName","street1","street2","city","state","country","zipcode","orderItems","map","orderItem","alignItems","cloudName","style","maxHeight","paddingRight","height","crop","src","product","description","thumbnailImage","name","quantity","price","offerPrice","_id","margin","skeletonSpacing","OrderConfirmationSkeleton","Container","Skeleton","width","OrderSuccessPage","props","location","token","orderId","useState","setOrder","history","useHistory","useEffect","window","scrollTo","orderResponse","a","completedOrder","data","replace","Button","color","type","endIcon","onClick","push","OrderSummary","showCheckout"],"mappings":"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","file":"static/js/18.e460340b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');\n\nexports.default = _default;","import { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport React from \"react\";\nimport { IPayment } from \"./Interface/IOrder\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 5,\n  },\n}));\ninterface IPaymentInfo {\n  payment?: IPayment;\n}\n\nconst PaymentInfo: React.FC<IPaymentInfo> = ({ payment }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container spacing={1}>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Typography variant=\"h4\" className={classes.title}>\n            Payment\n          </Typography>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Typography variant=\"body1\">\n            Method : {payment?.paymentType}\n          </Typography>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Typography variant=\"body1\">\n            Reference Number : {payment?.paymentId}\n          </Typography>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          {payment?.status === \"COMPLETED\" ? (\n            <Alert severity=\"success\">Payment Success</Alert>\n          ) : (\n            <Alert severity=\"error\">Payment Failed</Alert>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default PaymentInfo;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Image } from \"cloudinary-react\";\nimport React from \"react\";\nimport { IOrder } from \"./Interface/IOrder\";\nimport PaymentInfo from \"./PaymentInfo\";\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    marginTop: 15,\n  },\n  title: {\n    paddingBottom: 5,\n  },\n  separator: {\n    borderTop: \"2px solid #f2f2f2\",\n  },\n}));\n\ninterface IOrderInfo {\n  order: IOrder;\n}\n\nconst OrderInfo: React.FC<IOrderInfo> = ({ order }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={2} className={classes.grid}>\n      <Grid item lg={12} md={12} sm={12} xs={12} className={classes.separator}>\n        <PaymentInfo payment={order.payment} />\n      </Grid>\n\n      <Grid item lg={12} md={12} sm={12} xs={12} className={classes.separator}>\n        <Typography variant=\"h4\" className={classes.title}>\n          Address\n        </Typography>\n        <Grid container spacing={1}>\n          <Grid item lg={12} md={12} sm={12} xs={12}>\n            <Typography variant=\"body1\">\n              Name : {order.address.lastName}\n            </Typography>\n          </Grid>\n          <Grid item lg={12} md={12} sm={12} xs={12}>\n            <Typography variant=\"body1\">\n              Address :{\" \"}\n              {order.address.street1 +\n                (order.address.street2\n                  ? \", \" + order.address.street2 + \", \"\n                  : \", \") +\n                order.address.city +\n                \", \" +\n                order.address.state +\n                \", \" +\n                order.address.country +\n                \", \" +\n                order.address.zipcode}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item lg={12} md={12} sm={12} xs={12} className={classes.separator}>\n        <Typography variant=\"h4\" className={classes.title}>\n          Order Items\n        </Typography>\n        {order.orderItems.map((orderItem) => (\n          <Grid container key={orderItem._id} alignItems=\"center\" spacing={1}>\n            <Grid item lg={2} md={2} sm={2} xs={3}>\n              <Image\n                cloudName=\"dvvxjkifm\"\n                style={{ maxHeight: 45, paddingRight: 10, height: \"auto\" }}\n                crop=\"scale\"\n                src={orderItem.product.description[0].thumbnailImage}\n              ></Image>\n            </Grid>\n            <Grid item lg={5} md={5} sm={5} xs={5}>\n              <Typography variant=\"subtitle2\">\n                {orderItem.product.name}\n              </Typography>\n            </Grid>\n            <Grid item lg={3} md={3} sm={3} xs={3}>\n              <Typography variant=\"subtitle2\">\n                {orderItem.quantity} X {orderItem.product.price.offerPrice} ={\" \"}\n                {orderItem.price}\n              </Typography>\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport { OrderInfo };\n","import { Container, Grid, makeStyles } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    margin: 15,\n  },\n  skeletonSpacing: {\n    margin: 5,\n  },\n}));\n\nconst OrderConfirmationSkeleton = () => {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Skeleton\n        className={classes.title}\n        height={60}\n        width={700}\n        variant=\"rect\"\n      />\n      <Grid container spacing={3}>\n        <Grid item lg={9} md={9} sm={12} xs={12}>\n          <Grid container spacing={1} className={classes.skeletonSpacing}>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={30} width={200} variant=\"rect\" />\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={15} width={100} variant=\"rect\" />\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={20} width={100} variant=\"rect\" />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} className={classes.skeletonSpacing}>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={20} width={200} variant=\"rect\" />\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={15} width={100} variant=\"rect\" />\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={15} width={100} variant=\"rect\" />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} className={classes.skeletonSpacing}>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={20} width={200} variant=\"rect\" />\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={15} width={100} variant=\"rect\" />\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Skeleton height={15} width={100} variant=\"rect\" />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} className={classes.skeletonSpacing}>\n            <Grid item lg={3} md={3} sm={6} xs={6}>\n              <Skeleton\n                className={classes.skeletonSpacing}\n                height={50}\n                width={50}\n                variant=\"rect\"\n              />\n            </Grid>\n            <Grid item lg={9} md={9} sm={6} xs={6}>\n              <Skeleton\n                className={classes.skeletonSpacing}\n                height={15}\n                width={100}\n                variant=\"rect\"\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1} className={classes.skeletonSpacing}>\n            <Grid item lg={3} md={3} sm={6} xs={6}>\n              <Skeleton\n                className={classes.skeletonSpacing}\n                height={50}\n                width={50}\n                variant=\"rect\"\n              />\n            </Grid>\n            <Grid item lg={9} md={9} sm={6} xs={6}>\n              <Skeleton\n                className={classes.skeletonSpacing}\n                height={15}\n                width={100}\n                variant=\"rect\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item lg={3} md={3} sm={12} xs={12}>\n          <Skeleton\n            className={classes.skeletonSpacing}\n            height={400}\n            width={300}\n            variant=\"rect\"\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default OrderConfirmationSkeleton;\n","import {\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { completedOrder } from \"../../apis/orderApis\";\nimport { IOrder } from \"../../components/Interface/IOrder\";\nimport { OrderInfo } from \"../../components/OrderInfo\";\nimport OrderSummary from \"../../components/OrderSummary\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { useHistory } from \"react-router\";\nimport OrderConfirmationSkeleton from \"../../components/Skeletons/OrderConfirmationSkeleton\";\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 10,\n  },\n}));\n\nconst OrderSuccessPage: React.FC<any> = (props) => {\n  const { token, orderId } = (props.location && props.location.state) || {};\n  const [order, setOrder] = useState<IOrder | null>(null);\n  const history = useHistory();\n  const classes = useStyles();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    const orderResponse = async () => {\n      const { data } = await completedOrder(token, orderId);\n      setOrder(data);\n    };\n\n    if (orderId !== null && token !== null) {\n      orderResponse();\n    }\n\n    return () => {\n      history.replace(\"\", null);\n    };\n  }, [token, orderId, history]);\n\n  return order !== null ? (\n    <Container>\n      <Typography variant=\"h2\" className={classes.title}>\n        Thank you for your order!\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item lg={9} md={9} sm={12} xs={12}>\n          <Grid container spacing={1}>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Typography variant=\"body1\">\n                Your Order Id is {order.orderId}\n              </Typography>\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Typography variant=\"body1\">\n                We will email the order confirmation details shortly.\n              </Typography>\n            </Grid>\n            <Grid item lg={12} md={12} sm={12} xs={12}>\n              <Button\n                color=\"primary\"\n                type=\"submit\"\n                variant=\"contained\"\n                endIcon={<ArrowForwardIcon />}\n                onClick={() => {\n                  history.replace(\"\", null);\n                  history.push(\"/\");\n                }}\n              >\n                Continue Shopping\n              </Button>\n            </Grid>\n          </Grid>\n\n          <OrderInfo order={order} />\n        </Grid>\n        <Grid item lg={3} md={3} sm={12} xs={12}>\n          <OrderSummary order={order} showCheckout={false} />\n        </Grid>\n      </Grid>\n    </Container>\n  ) : (\n    <OrderConfirmationSkeleton />\n  );\n};\n\nexport default OrderSuccessPage;\n"],"sourceRoot":""}