{"version":3,"sources":["hooks/useActiveOrder.ts","apis/productApis.ts","actions/productActions.ts","components/Error.tsx","components/ProductButton.tsx","components/ProductDetail.tsx","components/ProductImage.tsx","screens/PDP/ProductDetailPage.tsx"],"names":["useActiveOrder","activeOrder","useSelector","state","order","error","getProductsByCategory","path","count","sortBy","axios","method","url","params","storeName","headers","getProductDetail","listProducts","dispatch","a","productCount","isMobile","type","PRODUCT_LIST_REQUEST","data","PRODUCT_LIST_SUCCESS","payload","products","PRODUCT_LIST_FAIL","response","listProductsByCategory","PRODUCT_LIST_BY_CATEGORY_REQUEST","PRODUCT_LIST_BY_CATEGORY_SUCCESS","category","PRODUCT_LIST_BY_CATEGORY_FAIL","getProductDetailsByPath","PRODUCT_DETAIL_BY_PATH_REQUEST","loading","PRODUCT_DETAIL_BY_PATH_SUCCESS","product","PRODUCT_DETAIL_BY_PATH_FAIL","useStyles","makeStyles","theme","padding","Error","classes","container","spacing","alignItems","justifyContent","className","item","xs","alt","src","component","variant","button","width","margin","quantity","display","ProductButton","useDispatch","useState","orderItem","setOrderItem","user","useUserLogin","inCart","setInCart","open","setOpen","message","setMessage","severity","setSeverity","setLoading","handleClose","event","reason","showMessage","addToCart","Object","keys","length","updateQuantity","_id","token","guestRegister","guestLoginData","createOrder","status","USER_REGISTER_SUCCESS","USER_LOGIN_SUCCESS","ACTIVE_ORDER_SUCCESS","removeItemFromCart","addUpdateItem","removeItem","getActiveOrder","removeFromCart","useEffect","itemExists","orderItems","filter","Skeleton","height","Grid","lg","md","sm","Button","color","onClick","Typography","startIcon","Snackbar","autoHideDuration","onClose","Alert","price","fontWeight","fontSize","marginLeft","reviews","listPrice","contentBody","content","marginTop","title","borderBottom","rating","zIndex","ProductDetail","props","description","useMediaQuery","name","Rating","size","defaultValue","precision","readOnly","offerPrice","toFixed","attributes","map","attribute","value","longDescription","image","maxHeight","ProductImage","ReactImageMagnify","smallImage","isFluidWidth","largeImage","enlargedImageContainerDimensions","imageClassName","paddingBottom","productImage","position","top","skeletonSpacing","marginBottom","skeletonInfo","ProductDetailPage","match","history","useHistory","productDetailByPathReducer","desc","language","languageId","fullImage","window","scrollTo","Container","goBack"],"mappings":"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","file":"static/js/14.e5f3b239.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\n\nconst useActiveOrder = () => {\n  const activeOrder = useSelector((state: any) => {\n    return state.activeOrder;\n  });\n  const { order, error } = activeOrder;\n\n  return { order, error };\n};\n\nexport default useActiveOrder;\n","import axios from \"axios\";\n\nexport const getProducts = (count: number) => {\n  return axios({\n    method: \"GET\",\n    url: \"/api/products\",\n    params: {\n      count,\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n\nexport const getProductsByCategory = (\n  path: string,\n  count: number,\n  sortBy: number\n) => {\n  return axios({\n    method: \"GET\",\n    url: \"/api/products/byCategory\",\n    params: {\n      path,\n      count,\n      sortBy,\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n\nexport const getProductDetail = (path: string) => {\n  return axios({\n    method: \"GET\",\n    url: `/api/products//detail/${path}`,\n    params: {\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n","import {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_BY_CATEGORY_SUCCESS,\n  PRODUCT_LIST_BY_CATEGORY_FAIL,\n  PRODUCT_DETAIL_BY_PATH_FAIL,\n  PRODUCT_DETAIL_BY_PATH_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_BY_CATEGORY_REQUEST,\n  PRODUCT_DETAIL_BY_PATH_REQUEST,\n} from \"../ActionTypes/product\";\nimport {\n  getProductDetail,\n  getProducts,\n  getProductsByCategory,\n} from \"../apis/productApis\";\nimport { isMobile } from \"react-device-detect\";\n\nexport const listProducts = () => async (dispatch: any) => {\n  try {\n    let productCount = 4;\n    if (isMobile) {\n      productCount = 2;\n    }\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await getProducts(productCount);\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data.products });\n  } catch (err: any) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: err.response });\n  }\n};\n\nexport const listProductsByCategory =\n  (path: string, count: number, sortBy: number) => async (dispatch: any) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_BY_CATEGORY_REQUEST });\n      const { data } = await getProductsByCategory(path, count, sortBy);\n      dispatch({\n        type: PRODUCT_LIST_BY_CATEGORY_SUCCESS,\n        payload: data.category,\n      });\n    } catch (err: any) {\n      dispatch({ type: PRODUCT_LIST_BY_CATEGORY_FAIL, payload: err.response });\n    }\n  };\n\nexport const getProductDetailsByPath =\n  (path: string) => async (dispatch: any) => {\n    try {\n      dispatch({\n        type: PRODUCT_DETAIL_BY_PATH_REQUEST,\n        payload: { loading: true },\n      });\n      const { data } = await getProductDetail(path);\n      dispatch({\n        type: PRODUCT_DETAIL_BY_PATH_SUCCESS,\n        payload: data.product,\n      });\n    } catch (err: any) {\n      dispatch({ type: PRODUCT_DETAIL_BY_PATH_FAIL, payload: err.response });\n    }\n  };\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    padding: 30,\n  },\n}));\n\nconst Error = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={0}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      className={classes.error}\n    >\n      <Grid item xs={3}>\n        <img\n          alt=\"no resutls\"\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSfgrUiFnZKbTkCdl6z_uHD6PAQqkKsb_A7iA&usqp=CAU\"\n        />\n        <Typography component=\"h3\" variant=\"h3\">\n          Aaaah! Something went wrong\n        </Typography>\n        <Typography component=\"p\" variant=\"subtitle2\">\n          Brace yourself. we'll get this fixed as soon as possible. Sorry for\n          inconvenience. As an interim fix try refreshing, if the issue is still\n          persistent. Reach support - support@mcommerce.com\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Error;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Snackbar, Typography } from \"@material-ui/core\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport CartIcon from \"@material-ui/icons/ShoppingCart\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { IProduct } from \"./Interface/IProduct\";\nimport { IOrderItems } from \"./Interface/IOrder\";\nimport useActiveOrder from \"../hooks/useActiveOrder\";\nimport { guestRegister } from \"../apis/userApis\";\nimport useUserLogin from \"../hooks/useUserLogin\";\nimport { Alert, Color, Skeleton } from \"@material-ui/lab\";\nimport { ACTIVE_ORDER_SUCCESS } from \"../ActionTypes/order\";\nimport { addUpdateItem, createOrder, removeItem } from \"../apis/orderApis\";\nimport { USER_LOGIN_SUCCESS, USER_REGISTER_SUCCESS } from \"../ActionTypes/user\";\nimport { getActiveOrder } from \"../actions/orderActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    margin: 2,\n  },\n  quantity: {\n    justifyContent: \"center\",\n    display: \"flex\",\n  },\n}));\n\nconst ProductButton = ({ product }: { product: IProduct }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [orderItem, setOrderItem] = useState<IOrderItems | null>();\n  const { order, error } = useActiveOrder();\n  const { user } = useUserLogin();\n  const [inCart, setInCart] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [severity, setSeverity] = useState<Color | undefined>(\"success\");\n  const [loading, setLoading] = useState<Boolean>(false);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const showMessage = (message: any, type?: any) => {\n    if (error?.message) {\n      setMessage(error.message);\n    } else {\n      setMessage(message);\n    }\n    setSeverity(type || \"success\");\n    setOpen(true);\n  };\n\n  const addToCart = async () => {\n    setLoading(true);\n\n    if (order && Object.keys(order).length > 0) {\n      let quantity = 1;\n      if (orderItem) {\n        quantity += orderItem.quantity;\n      }\n      updateQuantity(order._id, product._id, quantity, user.token);\n    } else {\n      let token = user?.token;\n      let guestLoginData;\n      if (!token) {\n        const { data } = await guestRegister();\n        token = data.token;\n        guestLoginData = data;\n      }\n\n      const { data, status } = await createOrder(product._id, 1, token);\n      if (status === 200 || status === 201) {\n        if (guestLoginData) {\n          dispatch({ type: USER_REGISTER_SUCCESS, payload: guestLoginData });\n          dispatch({ type: USER_LOGIN_SUCCESS, payload: guestLoginData });\n        }\n\n        setLoading(false);\n        dispatch({ type: ACTIVE_ORDER_SUCCESS, payload: data });\n        showMessage(\"Updated cart successfully\");\n      } else {\n        showMessage(\"Error occured while updating cart\", \"error\");\n      }\n    }\n  };\n\n  const updateQuantity = async (\n    order: any,\n    product: any,\n    quantity: any,\n    token: any\n  ) => {\n    let response;\n    let removeItemFromCart = false;\n    if (quantity) {\n      response = await addUpdateItem(order, product, quantity, token);\n    } else {\n      removeItemFromCart = true;\n      response = await removeItem(order, product, token);\n    }\n\n    if (response.status === 200 || response.status === 201) {\n      setLoading(false);\n      showMessage(\"Updated cart successfully\", \"success\");\n      if (removeItemFromCart) {\n        dispatch(getActiveOrder());\n      } else {\n        dispatch({ type: ACTIVE_ORDER_SUCCESS, payload: response.data });\n      }\n    } else {\n      showMessage(\"Error occured while updating cart\", \"error\");\n    }\n  };\n\n  const removeFromCart = async () => {\n    setLoading(true);\n    if (orderItem) {\n      let quantity = orderItem.quantity;\n      quantity -= 1;\n      if (quantity <= 0) {\n        updateQuantity(order._id, product._id, 0, user.token);\n      } else {\n        updateQuantity(order._id, product._id, quantity, user.token);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (order && Object.keys(order).length > 0) {\n      const itemExists = order.orderItems.filter(\n        (item: IOrderItems) => item.product._id === product._id\n      );\n      if (itemExists.length > 0) {\n        setOrderItem(itemExists[0]);\n        setInCart(true);\n      }\n    } else {\n      setOrderItem(null);\n      setInCart(false);\n    }\n  }, [order, product._id]);\n\n  return (\n    <div>\n      {!loading ? (\n        inCart ? (\n          <Grid container>\n            <Grid item lg={4} md={4} sm={4} xs={4}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                onClick={removeFromCart}\n              >\n                -\n              </Button>\n            </Grid>\n            <Grid item lg={4} md={4} sm={4} xs={4}>\n              <Typography className={classes.quantity}>\n                {orderItem?.quantity}\n              </Typography>\n            </Grid>\n            <Grid item lg={4} md={4} sm={4} xs={4}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.button}\n                onClick={addToCart}\n              >\n                +\n              </Button>\n            </Grid>\n          </Grid>\n        ) : (\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.button}\n            startIcon={<CartIcon />}\n            onClick={addToCart}\n          >\n            Add to Cart\n          </Button>\n        )\n      ) : (\n        <Skeleton variant=\"rect\" height={50} className={classes.button} />\n      )}\n\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        className={classes.button}\n        startIcon={<BookmarkIcon />}\n      >\n        Save to wish list\n      </Button>\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default ProductButton;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ProductButton from \"./ProductButton\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { IAttributes } from \"./Interface/IProduct\";\n\nconst useStyles = makeStyles((theme) => ({\n  price: {\n    fontWeight: \"bold\",\n    fontSize: \"x-large\",\n    marginLeft: 2,\n  },\n  reviews: {\n    fontSize: \"small\",\n  },\n  listPrice: {\n    fontSize: \"small\",\n    marginLeft: 5,\n  },\n  contentBody: {\n    padding: 5,\n  },\n  content: {\n    padding: 5,\n    marginTop: 10,\n  },\n  title: {\n    borderBottom: \"2px solid #f0f0f0\",\n    padding: 5,\n  },\n  rating: {\n    zIndex: -1,\n  },\n}));\n\nconst ProductDetail = (props: any) => {\n  const classes = useStyles();\n  const product = props.product;\n  const description = props.description;\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  return (\n    <>\n      <Typography variant=\"h5\">{product.name}</Typography>\n      <div>\n        <Typography variant=\"subtitle2\" className={classes.reviews}>\n          10000 Reviews | 200 comments\n        </Typography>\n        <Rating\n          size=\"small\"\n          name=\"read-only\"\n          defaultValue={3.5}\n          precision={0.5}\n          className={classes.rating}\n          readOnly\n        />\n\n        <Typography variant=\"body2\">\n          Price:{\" \"}\n          <span className={classes.price}>\n            ${product.price.offerPrice.toFixed(2)}\n          </span>\n          <del className={classes.listPrice}>\n            ${product.price.listPrice.toFixed(2)}\n          </del>\n        </Typography>\n      </div>\n\n      {isMobile && <ProductButton product={product} />}\n\n      {product.attributes.length > 0 ? (\n        <div className={classes.content}>\n          <Typography variant=\"h6\" className={classes.title}>\n            Specifications\n          </Typography>\n\n          {product.attributes.map((attribute: IAttributes) => (\n            <Grid\n              key={attribute._id}\n              container\n              spacing={3}\n              className={classes.contentBody}\n            >\n              <Grid item lg={3} md={4} sm={6} xs={6}>\n                <Typography\n                  className={classes.contentBody}\n                  variant=\"subtitle2\"\n                  component=\"p\"\n                >\n                  {attribute.name}\n                </Typography>\n              </Grid>\n              <Grid item lg={3} md={4} sm={6} xs={6}>\n                <Typography variant=\"subtitle2\" component=\"p\">\n                  {attribute.value}\n                </Typography>\n              </Grid>\n            </Grid>\n          ))}\n        </div>\n      ) : null}\n\n      <div className={classes.content}>\n        <Typography variant=\"h6\" className={classes.title}>\n          Description\n        </Typography>\n        <Typography variant=\"body2\" className={classes.contentBody}>\n          {description.longDescription}\n        </Typography>\n      </div>\n    </>\n  );\n};\n\nexport default ProductDetail;\n","import { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport ReactImageMagnify from \"react-image-magnify\";\n\ninterface IProductImage {\n  image: string;\n  alt: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    maxHeight: 500,\n  },\n}));\n\nconst ProductImage: React.FC<IProductImage> = ({ image, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <ReactImageMagnify\n      {...{\n        smallImage: {\n          alt,\n          isFluidWidth: true,\n          src: image,\n        },\n        largeImage: {\n          src: image,\n          width: 1200,\n          height: 1800,\n        },\n        enlargedImageContainerDimensions: {\n          width: \"60%\",\n          height: \"100%\",\n        },\n        imageClassName: classes.image,\n      }}\n    />\n  );\n};\n\nexport default ProductImage;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport ProductDetail from \"../../components/ProductDetail\";\nimport ProductImage from \"../../components/ProductImage\";\nimport { getProductDetailsByPath } from \"../../actions/productActions\";\nimport Error from \"../../components/Error\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  IProduct,\n  IProductDescription,\n} from \"../../components/Interface/IProduct\";\nimport ProductButton from \"../../components/ProductButton\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    paddingBottom: 30,\n  },\n  productImage: {\n    position: \"sticky\",\n    top: 120,\n  },\n  skeletonSpacing: {\n    marginBottom: 15,\n  },\n  skeletonInfo: {\n    marginBottom: 25,\n  },\n}));\n\nconst ProductDetailPage = (props: any) => {\n  const path = props.match.params.name;\n  const history = useHistory();\n  const isMobile = useMediaQuery(\"(max-width:600px)\");\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const getProductDetail = useSelector((state: any) => {\n    return state.productDetailByPathReducer;\n  });\n  const { product, loading }: { product: IProduct; loading: boolean } =\n    getProductDetail;\n\n  const description: IProductDescription | null =\n    product && Object.keys(product).length !== 0\n      ? product.description.filter((desc) => desc.language.languageId === -1)[0]\n      : null;\n\n  const image: string = description?.fullImage ? description.fullImage : \"\";\n  const alt: string = product?.name ? product.name : \"\";\n\n  useEffect(() => {\n    dispatch(getProductDetailsByPath(path));\n    window.scrollTo(0, 0);\n  }, [path, dispatch]);\n\n  return (\n    <>\n      {product && Object.keys(product).length > 0 && !loading ? (\n        <Container className={classes.container}>\n          <Grid container spacing={4}>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <div className={classes.productImage}>\n                <Button onClick={() => history.goBack()}>Go Back</Button>\n                <ProductImage image={image} alt={alt} />\n                {!isMobile && <ProductButton product={product} />}\n              </div>\n            </Grid>\n            <Grid item lg={8} md={6} sm={12} xs={12}>\n              <ProductDetail product={product} description={description} />\n            </Grid>\n          </Grid>\n        </Container>\n      ) : !loading ? (\n        <Error />\n      ) : (\n        <Container className={classes.container}>\n          <Grid container spacing={4}>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <div className={classes.productImage}>\n                <Button onClick={() => history.goBack()}>Go Back</Button>\n                <Skeleton\n                  className={classes.skeletonSpacing}\n                  variant=\"rect\"\n                  height={400}\n                  width={250}\n                />\n                {!isMobile && (\n                  <Skeleton\n                    className={classes.skeletonSpacing}\n                    variant=\"rect\"\n                    height={50}\n                    width={250}\n                  />\n                )}\n              </div>\n            </Grid>\n            <Grid item lg={8} md={6} sm={12} xs={12}>\n              <Skeleton\n                className={classes.skeletonInfo}\n                variant=\"rect\"\n                height={50}\n                width={550}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={100}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={100}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={150}\n              />\n              <Skeleton\n                className={classes.skeletonInfo}\n                variant=\"rect\"\n                height={20}\n                width={250}\n              />\n              <Skeleton\n                className={classes.skeletonInfo}\n                variant=\"rect\"\n                height={10}\n                width={50}\n              />\n              <Skeleton\n                className={classes.skeletonInfo}\n                variant=\"rect\"\n                height={10}\n                width={50}\n              />\n              <Skeleton\n                className={classes.skeletonInfo}\n                variant=\"rect\"\n                height={10}\n                width={50}\n              />\n              <Skeleton\n                className={classes.skeletonInfo}\n                variant=\"rect\"\n                height={20}\n                width={250}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={550}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={550}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={550}\n              />\n              <Skeleton\n                className={classes.skeletonSpacing}\n                variant=\"rect\"\n                height={10}\n                width={550}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default ProductDetailPage;\n"],"sourceRoot":""}