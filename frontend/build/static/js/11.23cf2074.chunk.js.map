{"version":3,"sources":["components/Product.tsx","components/ProductList.tsx","apis/productApis.ts","actions/productActions.ts","../node_modules/@material-ui/core/esm/Card/Card.js","components/Error.tsx","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","screens/Category/CategoryPage.tsx"],"names":["useStyles","makeStyles","theme","card","maxWidth","maxHeight","height","cursor","boxShadow","position","price","padding","spacing","fontWeight","reviews","fontSize","listPrice","button","bottom","Product","product","history","useHistory","classes","description","filter","desc","language","languageId","Card","variant","className","onClick","push","path","src","thumbnailImage","cloudName","width","crop","CardContent","Typography","component","name","length","Rating","size","defaultValue","precision","readOnly","toFixed","offerPrice","Button","container","categoryTitle","paddingBottom","float","title","error","categoryImage","display","imageRendering","marginBottom","sort","breakpoints","up","options","value","label","ProductList","props","products","loading","page","Container","alt","toUpperCase","TextField","id","select","sortOptions","onChange","handleSortChange","SelectProps","native","helperText","map","option","Grid","alignItems","item","xs","sm","lg","md","_id","Skeleton","index","getProductsByCategory","count","sortBy","axios","method","url","params","storeName","headers","getProductDetail","listProducts","dispatch","a","productCount","isMobile","type","PRODUCT_LIST_REQUEST","data","PRODUCT_LIST_SUCCESS","payload","PRODUCT_LIST_FAIL","response","listProductsByCategory","PRODUCT_LIST_BY_CATEGORY_REQUEST","PRODUCT_LIST_BY_CATEGORY_SUCCESS","category","PRODUCT_LIST_BY_CATEGORY_FAIL","getProductDetailsByPath","PRODUCT_DETAIL_BY_PATH_REQUEST","PRODUCT_DETAIL_BY_PATH_SUCCESS","PRODUCT_DETAIL_BY_PATH_FAIL","React","ref","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","Error","justifyContent","_props$component","Component","CategoryPage","categoryPath","match","useDispatch","productListByCategory","useSelector","state","productListByCategoryReducer","useState","setSortOptions","useEffect","window","scrollTo","Object","keys","event","target"],"mappings":"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","file":"static/js/11.23cf2074.chunk.js","sourcesContent":["import { Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport React from \"react\";\n\nimport Rating from \"@material-ui/lab/Rating\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Image } from \"cloudinary-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { IProduct } from \"./Interface/IProduct\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: 250,\n    maxHeight: 600,\n    height: 450,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      boxShadow: \"5px 10px 18px #888888\",\n    },\n    position: \"relative\",\n  },\n  price: {\n    padding: theme.spacing(1),\n    fontWeight: \"bold\",\n  },\n  reviews: {\n    fontSize: \"small\",\n  },\n  listPrice: {\n    fontSize: \"small\",\n  },\n  button: {\n    position: \"absolute\",\n    bottom: 10,\n  },\n}));\n\nconst Product = ({ product }: { product: IProduct }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const description = product.description.filter((desc) => {\n    return desc.language.languageId === -1;\n  });\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.card}\n      onClick={() => history.push(`/product/${product.path}`)}\n    >\n      <Image\n        src={description[0].thumbnailImage}\n        cloudName=\"dvvxjkifm\"\n        width=\"200\"\n        height=\"200\"\n        crop=\"scale\"\n      />\n\n      <CardContent>\n        <Typography\n          component=\"p\"\n          variant={product.name.length > 90 ? \"caption\" : \"body1\"}\n        >\n          {product.name}\n        </Typography>\n        <Typography>\n          <Rating\n            size=\"small\"\n            name=\"read-only\"\n            defaultValue={3.5}\n            precision={0.5}\n            readOnly\n          />\n        </Typography>\n        <p className={classes.reviews}>10 Reviews</p>\n        <Typography variant=\"h6\">\n          <del className={classes.listPrice}>\n            $ {product.price.listPrice.toFixed(2)}\n          </del>\n          <span className={classes.price}>\n            $ {product.price.offerPrice.toFixed(2)}\n          </span>\n        </Typography>\n        <Button variant=\"outlined\" size=\"small\" className={classes.button}>\n          Click to view product\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Container, Grid, TextField } from \"@material-ui/core\";\nimport Product from \"./Product\";\nimport { IProduct } from \"./Interface/IProduct\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"90%\",\n    padding: 20,\n  },\n  categoryTitle: {\n    paddingBottom: 16,\n    float: \"left\",\n  },\n  title: {\n    paddingBottom: 16,\n  },\n  error: {\n    padding: 30,\n  },\n  categoryImage: {\n    display: \"block\",\n    width: \"100%\",\n    height: 300,\n    imageRendering: \"pixelated\",\n    marginBottom: 15,\n  },\n  sort: {\n    [theme.breakpoints.up(\"sm\")]: {\n      float: \"right\",\n    },\n    margin: \"0px 0px 20px 20px\",\n  },\n}));\n\nconst options = [\n  {\n    value: 1,\n    label: \"Relevance\",\n  },\n  {\n    value: 2,\n    label: \"Price (low - high)\",\n  },\n  {\n    value: 3,\n    label: \"Price (high - low)\",\n  },\n  {\n    value: 4,\n    label: \"Name\",\n  },\n];\n\nconst ProductList = (props: any) => {\n  const classes = useStyles();\n  const products = props.products;\n  const loading = props.loading;\n  const page = props.page;\n\n  return (\n    <div>\n      {products && !loading ? (\n        <Container className={classes.container}>\n          {page === \"category\" ? (\n            <img\n              className={classes.categoryImage}\n              alt=\"category\"\n              src={props.categoryImage}\n            />\n          ) : null}\n          <Typography\n            variant=\"h5\"\n            className={\n              page === \"category\" ? classes.categoryTitle : classes.title\n            }\n          >\n            {props.title.toUpperCase()}\n          </Typography>\n          {page === \"category\" || page === \"search\" ? (\n            <TextField\n              id=\"outlined-select-sortOptions-native\"\n              select\n              label=\"Sort By\"\n              value={props.sortOptions}\n              onChange={props.handleSortChange}\n              SelectProps={{\n                native: true,\n              }}\n              helperText=\"Please select your sort order\"\n              variant=\"outlined\"\n              className={classes.sort}\n            >\n              {options.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </TextField>\n          ) : null}\n\n          <Grid container alignItems=\"center\" spacing={3}>\n            {products\n              ? products.map((product: IProduct) => {\n                  return (\n                    <Grid key={product._id} item xs={12} sm={6} lg={3} md={4}>\n                      <Product product={product} />\n                    </Grid>\n                  );\n                })\n              : null}\n          </Grid>\n        </Container>\n      ) : (\n        <Container className={classes.container}>\n          <Skeleton\n            className={classes.categoryTitle}\n            variant=\"rect\"\n            width={200}\n            height={20}\n          />\n          <Grid container alignItems=\"center\" spacing={3}>\n            {[1, 2, 3, 4].map((index) => (\n              <Grid key={index} item xs={12} sm={6} lg={3} md={4}>\n                <Skeleton variant=\"rect\" width={250} height={350} />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nexport default ProductList;\n","import axios from \"axios\";\n\nexport const getProducts = (count: number) => {\n  return axios({\n    method: \"GET\",\n    url: \"/api/products\",\n    params: {\n      count,\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n\nexport const getProductsByCategory = (\n  path: string,\n  count: number,\n  sortBy: number\n) => {\n  return axios({\n    method: \"GET\",\n    url: \"/api/products/byCategory\",\n    params: {\n      path,\n      count,\n      sortBy,\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n\nexport const getProductDetail = (path: string) => {\n  return axios({\n    method: \"GET\",\n    url: `/api/products//detail/${path}`,\n    params: {\n      storeName: \"MaheshCommerce\",\n    },\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  });\n};\n","import {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_BY_CATEGORY_SUCCESS,\n  PRODUCT_LIST_BY_CATEGORY_FAIL,\n  PRODUCT_DETAIL_BY_PATH_FAIL,\n  PRODUCT_DETAIL_BY_PATH_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_BY_CATEGORY_REQUEST,\n  PRODUCT_DETAIL_BY_PATH_REQUEST,\n} from \"../ActionTypes/product\";\nimport {\n  getProductDetail,\n  getProducts,\n  getProductsByCategory,\n} from \"../apis/productApis\";\nimport { isMobile } from \"react-device-detect\";\n\nexport const listProducts = () => async (dispatch: any) => {\n  try {\n    let productCount = 4;\n    if (isMobile) {\n      productCount = 2;\n    }\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const { data } = await getProducts(productCount);\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data.products });\n  } catch (err: any) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: err.response });\n  }\n};\n\nexport const listProductsByCategory =\n  (path: string, count: number, sortBy: number) => async (dispatch: any) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_BY_CATEGORY_REQUEST });\n      const { data } = await getProductsByCategory(path, count, sortBy);\n      dispatch({\n        type: PRODUCT_LIST_BY_CATEGORY_SUCCESS,\n        payload: data.category,\n      });\n    } catch (err: any) {\n      dispatch({ type: PRODUCT_LIST_BY_CATEGORY_FAIL, payload: err.response });\n    }\n  };\n\nexport const getProductDetailsByPath =\n  (path: string) => async (dispatch: any) => {\n    try {\n      dispatch({\n        type: PRODUCT_DETAIL_BY_PATH_REQUEST,\n        payload: { loading: true },\n      });\n      const { data } = await getProductDetail(path);\n      dispatch({\n        type: PRODUCT_DETAIL_BY_PATH_SUCCESS,\n        payload: data.product,\n      });\n    } catch (err: any) {\n      dispatch({ type: PRODUCT_DETAIL_BY_PATH_FAIL, payload: err.response });\n    }\n  };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    padding: 30,\n  },\n}));\n\nconst Error = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={0}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      className={classes.error}\n    >\n      <Grid item xs={3}>\n        <img\n          alt=\"no resutls\"\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSfgrUiFnZKbTkCdl6z_uHD6PAQqkKsb_A7iA&usqp=CAU\"\n        />\n        <Typography component=\"h3\" variant=\"h3\">\n          Aaaah! Something went wrong\n        </Typography>\n        <Typography component=\"p\" variant=\"subtitle2\">\n          Brace yourself. we'll get this fixed as soon as possible. Sorry for\n          inconvenience. As an interim fix try refreshing, if the issue is still\n          persistent. Reach support - support@mcommerce.com\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Error;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductsByCategory } from \"../../actions/productActions\";\nimport Error from \"../../components/Error\";\nimport PageSkeleton from \"../../components/PageSkeleton\";\nimport ProductList from \"../../components/ProductList\";\n\nconst CategoryPage = (props: any) => {\n  const categoryPath = props.match.params.name;\n  const dispatch = useDispatch();\n  const productListByCategory = useSelector((state: any) => {\n    return state.productListByCategoryReducer;\n  });\n  const { category, loading } = productListByCategory;\n\n  const [sortOptions, setSortOptions] = React.useState(1);\n\n  const handleSortChange = (event: any) => {\n    setSortOptions(event.target.value);\n    dispatch(listProductsByCategory(categoryPath, 10, event.target.value));\n  };\n\n  useEffect(() => {\n    dispatch(listProductsByCategory(categoryPath, 10, 1));\n    setSortOptions(1);\n    window.scrollTo(0, 0);\n  }, [categoryPath, dispatch]);\n\n  return (\n    <>\n      {category && Object.keys(category).length > 0 ? (\n        <ProductList\n          products={category.products}\n          title={category.name}\n          loading={loading}\n          categoryImage={category.description[0].categoryImage}\n          page=\"category\"\n          sortOptions={sortOptions}\n          handleSortChange={handleSortChange}\n        />\n      ) : (\n        <PageSkeleton />\n      )}\n      {!category && !loading && <Error />}\n    </>\n  );\n};\n\nexport default CategoryPage;\n"],"sourceRoot":""}