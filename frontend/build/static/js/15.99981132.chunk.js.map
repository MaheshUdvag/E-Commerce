{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","components/Category.tsx","components/CategoryList.tsx","screens/Category/CategoryListPage.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","useStyles","makeStyles","theme","card","width","height","cursor","boxShadow","padding","textAlign","categoryImage","Category","category","history","useHistory","variant","onClick","push","path","src","description","alt","Typography","component","toUpperCase","container","categoryTitle","textTransform","CategoryList","categories","label","Container","Grid","alignItems","spacing","map","subCategories","item","xs","sm","lg","md","_id","CategoryListPage","useSelector","state","categoryListReducer","categoryLoad","loading"],"mappings":"iHAAA,gDAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,I,8GCjDGkB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,IACPC,OAAQ,IACRC,OAAQ,UACR,UAAW,CACTC,UAAW,yBAEbC,QAAS,GACTC,UAAW,UAEbC,cAAe,CACbL,OAAQ,IACRD,MAAO,SA0BIO,EAtBiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B1B,EAAUc,IACVa,EAAUC,cAEhB,OACE,eAAChC,EAAA,EAAD,CACEiC,QAAQ,WACR5B,UAAWD,EAAQiB,KACnBa,QAAS,kBAAMH,EAAQI,KAAR,oBAA0BL,EAASM,QAHpD,UAKE,cAAC,IAAD,CACEC,IAAKP,EAASQ,YAAY,GAAGV,cAC7BW,IAAKT,EAASb,KACdZ,UAAWD,EAAQwB,gBAErB,cAACY,EAAA,EAAD,CAAYC,UAAU,IAAIR,QAAQ,YAAlC,SACGH,EAASb,KAAKyB,oBCnCjBxB,EAAYC,aAAW,iBAAO,CAClCwB,UAAW,CACTrB,MAAO,MACPI,QAAS,IAEXkB,cAAe,CACblB,QAAS,GACTmB,cAAe,iBAwBJC,IArBqB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAC3C5C,EAAUc,IAEhB,OACE,eAAC+B,EAAA,EAAD,CAAW5C,UAAWD,EAAQuC,UAA9B,UACE,cAACH,EAAA,EAAD,CAAYC,UAAU,KAAKR,QAAQ,KAAK5B,UAAWD,EAAQwC,cAA3D,SACGI,IAEH,cAACE,EAAA,EAAD,CAAMP,WAAS,EAACQ,WAAW,SAASC,QAAS,EAA7C,SACGL,EAAWM,KAAI,SAACvB,GAAD,OACdA,EAASwB,cAAcD,KAAI,SAACvB,GAAD,OACzB,cAACoB,EAAA,EAAD,CAAyBK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAxD,SACE,cAAC,EAAD,CAAU7B,SAAUA,KADXA,EAAS8B,kB,iCCzBhC,wCAiBeC,UAbU,WACvB,MAA8CC,aAAY,SAACC,GACzD,OAAOA,EAAMC,uBADEC,EAAjB,EAAQC,QAAuBnB,EAA/B,EAA+BA,WAG/B,OACE,mCACGA,IAAekB,GACd,cAAC,IAAD,CAAclB,WAAYA,EAAYC,MAAM","file":"static/js/15.99981132.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import { Card, Typography } from \"@material-ui/core\";\nimport { Image } from \"cloudinary-react\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: 200,\n    height: 250,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      boxShadow: \"5px 10px 18px #888888\",\n    },\n    padding: 15,\n    textAlign: \"center\",\n  },\n  categoryImage: {\n    height: 200,\n    width: 200,\n  },\n}));\n\nconst Category: React.FC<any> = ({ category }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.card}\n      onClick={() => history.push(`/category/${category.path}`)}\n    >\n      <Image\n        src={category.description[0].categoryImage}\n        alt={category.name}\n        className={classes.categoryImage}\n      />\n      <Typography component=\"p\" variant=\"subtitle1\">\n        {category.name.toUpperCase()}\n      </Typography>\n    </Card>\n  );\n};\n\nexport default Category;\n","import { Container, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Category from \"./Category\";\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: \"90%\",\n    padding: 10,\n  },\n  categoryTitle: {\n    padding: 10,\n    textTransform: \"uppercase\",\n  },\n}));\nconst CategoryList: React.FC<any> = ({ categories, label }) => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Typography component=\"h5\" variant=\"h5\" className={classes.categoryTitle}>\n        {label}\n      </Typography>\n      <Grid container alignItems=\"center\" spacing={2}>\n        {categories.map((category: any) =>\n          category.subCategories.map((category: any) => (\n            <Grid key={category._id} item xs={12} sm={5} lg={3} md={4}>\n              <Category category={category} />\n            </Grid>\n          ))\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CategoryList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CategoryList from \"../../components/CategoryList\";\n\nconst CategoryListPage = () => {\n  const { loading: categoryLoad, categories } = useSelector((state: any) => {\n    return state.categoryListReducer;\n  });\n  return (\n    <>\n      {categories && !categoryLoad && (\n        <CategoryList categories={categories} label=\"All Categories\" />\n      )}\n    </>\n  );\n};\n\nexport default CategoryListPage;\n"],"sourceRoot":""}